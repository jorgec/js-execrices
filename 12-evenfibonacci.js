/*
 * PROBLEM
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * 
 * SOLUTION
 * The first two numbers of the fibonacci sequence are known; they are: 1, 2. The next value is the sum of the previous 2.
 * We keep adding, and deriving the next sequence for as long as it is less than 4M -and- provided that it is an even number.
 * 
 * TERMS:
 * - Even number: divisible by 2; n % 2 == 0
 * 
 * ALGORITHM:
 * 1. Get the value of the next number in the sequence by adding the previous two numbers
 * 2. If that number is even, add to the total
 * 3. Repeat for as long as that number is less than 4M
 */

var current = 1; // initial value, first element of the sequence
var next = 2; // initial value, second element of the sequence
var n = 4000000; // limit
var sum = next; // only add the even numbers

while (next < n) {
    // swapping block
    // because we can't just simply go:
    //      current = next    
    //      next = current + next
    // we have to store the value of current somewhere temporarily
    var temp = current; // store the value of current
    current = next;
    next = temp + current;

    var is_even = next % 2 == 0;
    if (is_even) {
        sum = sum + next;
    }
}

console.log(sum);